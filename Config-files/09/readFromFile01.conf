input {
    file {
        type => "logfile-generator"
        path => ["/home/dimitri/Dropbox/Private/Dropbox/ELK-DOCKER/ELK/Logstash/Log-files/*log"]
        start_position => "beginning"
    }
}

filter {
    multiline {
        pattern => "(^\s+.+)|(^[^0-9]+.+)|(^[\s]*$)"
        what => "previous"
    }
    if "multiline" not in [tags]{
        grok {
            match => {
                "message" => "%{HUBODATE:timestamp}\s\*%{DATA:level}\*\s\[%{DATA:thread}\]\s%{DATA:class}\s%{DATA:msg}\z"
            }
        }
        date {
            match => [ "timestamp", "dd.MM.yyyy HH:mm:ss.SSS" ]
            locale => en
            remove_field => "timestamp"
        }
        if [msg] =~ "customerId"{
            grok {
                match => [ "msg", "(?m)customerId %{INT:customerid:int}" ]
            }
        }
        if [msg] =~ "cartId"{
            grok {
                match => [ "msg", "(?m)cartId %{INT:cartId:int}" ]
            }
        }

        if [msg] =~ "customerIp"{
            grok {
                match => [ "msg", "(?m)customerIp %{IP:ip}" ]
            }
            geoip {
                source => "ip"
            }
        }
    }
    if "multiline" in [tags]{
        if [message] =~ "Exception"{
            mutate {
                add_tag => [exception]
            }
        }
    }
}

output {
    stdout {
        codec => rubydebug
    }
    elasticsearch {
        host => localhost
    }
}
